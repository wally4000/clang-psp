diff --git a/libgloss/libnosys/warning.h b/libgloss/libnosys/warning.h
index 9232a9244..924de0c57 100644
--- a/libgloss/libnosys/warning.h
+++ b/libgloss/libnosys/warning.h
@@ -37,8 +37,12 @@
 
 /* A canned warning for sysdeps/stub functions.
    The GNU linker prepends a "warning: " string.  */
+#ifndef __clang__
 #define stub_warning(name) \
   link_warning (name, \
                 #name " is not implemented and will always fail")
+#else
+#define stub_warning(name)
+#endif
 
 #endif /* __WARNING_H__ */
diff --git a/libgloss/mips/crt0.S b/libgloss/mips/crt0.S
index 599e79c60..ca2d788bf 100644
--- a/libgloss/mips/crt0.S
+++ b/libgloss/mips/crt0.S
@@ -53,7 +53,7 @@
  */
 	nop
 
-	.globl	hardware_hazard_hook .text
+	.globl	hardware_hazard_hook
 	.globl	_start
 	.ent	_start
 _start:
@@ -138,7 +138,7 @@ _start:
  * zero out the bss section.
  */
 	.globl	__memsize
-	.globl	get_mem_info .text
+	.globl	get_mem_info
 	.globl	__stack
 	.globl	__global
 	.ent	zerobss
@@ -179,12 +179,12 @@ zerobss:
  * initialize target specific stuff. Only execute these
  * functions it they exist.
  */
-	.globl	hardware_init_hook .text
-	.globl	software_init_hook .text
+	.globl	hardware_init_hook 
+	.globl	software_init_hook
 	.type	_fini,@function
 	.type	_init,@function
-	.globl	atexit .text
-	.globl	exit .text
+	.globl	atexit
+	.globl	exit
 	.ent	init
 init:
 	LA (t9, hardware_init_hook)		# init the hardware if needed
@@ -248,7 +248,7 @@ init:
  *          executables that contain a complete world to be linked with
  *          just the crt0.o object.
  */
-	.globl	hardware_exit_hook .text
+	.globl	hardware_exit_hook
 	.globl	_exit
 	.ent _exit
 _exit:
diff --git a/libgloss/mips/crt0_cfe.S b/libgloss/mips/crt0_cfe.S
index 9e920e2d5..0430a1812 100644
--- a/libgloss/mips/crt0_cfe.S
+++ b/libgloss/mips/crt0_cfe.S
@@ -173,12 +173,12 @@ _stackinit:
      * initialize target specific stuff. Only execute these
      * functions it they exist.
      */
-	.globl	hardware_init_hook .text
-	.globl	software_init_hook .text
+	.globl	hardware_init_hook
+	.globl	software_init_hook
 	.type	_fini,@function
 	.type	_init,@function
-	.globl	atexit .text
-	.globl	exit .text
+	.globl	atexit
+	.globl	exit
 	.globl	_crt0init
 	.ent	_crt0init
 _crt0init:
diff --git a/libgloss/mips/test.c b/libgloss/mips/test.c
index a99347914..3491687aa 100644
--- a/libgloss/mips/test.c
+++ b/libgloss/mips/test.c
@@ -1,4 +1,4 @@
-main()
+void main()
 {
   outbyte ('&');
   outbyte ('@');
diff --git a/newlib/configure.host b/newlib/configure.host
index eb295f5ca..524700110 100644
--- a/newlib/configure.host
+++ b/newlib/configure.host
@@ -669,7 +669,16 @@ case "${host}" in
 	default_newlib_io_long_long="yes"
 	sys_dir=psp
 	syscall_dir=syscalls
-	newlib_cflags="${newlib_cflags} -G0 -mno-explicit-relocs -DCOMPACT_CTYPE -DCLOCK_PROVIDED -DHAVE_FCNTL -DHAVE_RENAME -DMALLOC_ALIGNMENT=16 -I${prefix}/psp/sdk/include"
+	newlib_cflags="${newlib_cflags} -G0 -DCOMPACT_CTYPE -DCLOCK_PROVIDED -DHAVE_FCNTL -DHAVE_RENAME -DMALLOC_ALIGNMENT=16 -I${prefix}/psp/sdk/include"
+
+	case "$CC" in
+	  *clang*)
+	    newlib_cflags="${newlib_cflags} -ffreestanding -target mips -mcpu=mips2 -msingle-float -mlittle-endian -mno-check-zero-division -D__psp__ -DDISABLE_PREFETCH"
+	    ;;
+	  *gcc*)
+	    newlib_cflags="${newlib_cflags} -mno-explicit-relocs"
+	    ;;
+	esac
 	;;
   mips*-*-elf*)
 	default_newlib_io_long_long="yes"
diff --git a/newlib/libc/include/sys/reent.h b/newlib/libc/include/sys/reent.h
index 8518964f9..b5f3adb92 100644
--- a/newlib/libc/include/sys/reent.h
+++ b/newlib/libc/include/sys/reent.h
@@ -816,7 +816,7 @@ struct _reent
 #endif
 
 extern struct _reent *_impure_ptr __ATTRIBUTE_IMPURE_PTR__;
-extern struct _reent *_CONST _global_impure_ptr __ATTRIBUTE_IMPURE_PTR__;
+extern struct _reent *_global_impure_ptr __ATTRIBUTE_IMPURE_PTR__;
 
 void _reclaim_reent _PARAMS ((struct _reent *));
 
diff --git a/newlib/libc/reent/impure.c b/newlib/libc/reent/impure.c
index f5918c88f..13635a01b 100644
--- a/newlib/libc/reent/impure.c
+++ b/newlib/libc/reent/impure.c
@@ -25,4 +25,4 @@ static struct _reent __ATTRIBUTE_IMPURE_DATA__ impure_data = _REENT_INIT (impure
 extern struct _reent reent_data __attribute__ ((alias("impure_data")));
 #endif
 struct _reent *__ATTRIBUTE_IMPURE_PTR__ _impure_ptr = &impure_data;
-struct _reent *_CONST __ATTRIBUTE_IMPURE_PTR__ _global_impure_ptr = &impure_data;
+struct _reent *__ATTRIBUTE_IMPURE_PTR__ _global_impure_ptr = &impure_data;
diff --git a/newlib/libc/sys/psp/interrupt.S b/newlib/libc/sys/psp/interrupt.S
index e0d7668ea..d229097ea 100644
--- a/newlib/libc/sys/psp/interrupt.S
+++ b/newlib/libc/sys/psp/interrupt.S
@@ -6,8 +6,8 @@
 	.ent    pspDisableInterrupts
 
 pspDisableInterrupts:
-	mfic	$v0, $0
-	mtic	$0, $0
+    .word 0x70020024 // mfic	$v0, $0
+	.word 0x70000026 // mtic	$0, $0
 	nop
 	nop
 	nop
@@ -38,7 +38,7 @@ pspDisableInterrupts:
 	.ent    pspEnableInterrupts
 
 pspEnableInterrupts:
-	mtic	$a0, $0
+	.word 0x70040026 // mtic	$a0, $0
 	nop
 	nop
 	nop
